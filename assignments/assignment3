#include <stdio.h>
#include <math.h>
#include <graphics.h>

#define ARRAYSIZE 500
#define INITIALFILEPATHSIZE 30


int cmain()
{
    // declare variables
    int i,j,k,l;
    char file[200], name_of_filepath[200]="./";
    float  x[ARRAYSIZE], y[ARRAYSIZE],radius[ARRAYSIZE], angle[ARRAYSIZE];

    // function prototypes
    float xconvert(float radius[],float angle[],int i);
    float yconvert(float radius[],float angle[],int i);
    void printArray(float array[ARRAYSIZE],int i);

    FILE *inputFile;

    //prompt for file name
    printf("Type file name: ");
    scanf("%s", file);

    //set full file pathway
    for(i = 0;i < 200;i++)
    {
        name_of_filepath[i+INITIALFILEPATHSIZE] = file[i];
    }

    //read this file
    inputFile = fopen(name_of_filepath, "r");

    //check file works
    if(inputFile == NULL)
    {
         printf("Could not open input file\n");
    }

    //read in data to arrays
    for(j = 0;j < ARRAYSIZE;j++)
    {
        if( fscanf(inputFile,"%f%f",&radius[j],&angle[j]) == EOF)
        {
            break;
        }
    }

    fclose(inputFile);

    /*
    //convert polar to cartesian
    for(k = 0;k <= j;k++)
    {
        x[k] = radius[k] * cos(angle[k]);
        y[k] = radius[k] * sin(angle[k]);
    }
    */

    //convert polar to cartesian
    for(k = 0;k <= j; k++)
    {
            x[k] = xconvert(radius, angle, k);
            y[k] = yconvert(radius, angle, k);
    }

    // open plotting window
    ploton(400,600);

    //scaling plot for bottom right most and top left most entries
    scalx(x[0],x[1]);
    scaly(y[0],y[1]);

    //set pen down initially
    set(x[0],y[0]);

    // put a cross at the point
    for(l = 0;l < k;l++)
    {
        dvect(x[l],y[l]);
        cross(x[l],y[l]);
    }

    return 0;
}

// funtions to convert polar coordinates to x and y coordinates
float xconvert(float radius[], float angle[], int k){
    float output;
        output=radius[k]*cos(angle[k]);
    return output;
}

float yconvert(float radius[], float angle[], int k){
    float output;
        output=radius[k]*sin(angle[k]);
    return output;
}
